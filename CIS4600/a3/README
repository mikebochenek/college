/* CIS*4600 Elements of Theory of Computation
   Assignment #3, Due: Thursday, November 23, 2000
   Michael Bochenek ID: 0041056 */

COMPILING:
	type 'make' to compile.

EXECUTION:
	type 'a2 file_a file_q' - where file_a is the name of the file
containg the automation file, and file_q is the name of the file containing
the strings that are to be tested.

LIST OF INCLUDED FILES:
	README - this file (you are reading)
	a3* - Assignment #3 executable
	a3.c - source code for the main program (a3*)
	ans1 - automation file for question #1
	ans2 - automation file for question #2
	makefile - makefile used to compile the project

EXAMPLE AUTOMATION FILE:

Here is an example automation file.  It only has one state, and it is
an accept state.  Anytime a ')' is encountered it is pushed onto
the stack.  Anytime a '(' is encountered, the topmost character 
is popped off the stack.  All the possible transitions are
listed starting on the fifth line, with "1 1 )", which means that there
is a transition from state#1 to state#1 on input character ')'.

1     <-- number of states
1     <-- list of accept states (space delimited)
)     <-- list of characters that invoke a 'push' command (comma delimited)
(     <-- list of characters that invoke a 'pop' command (comma delimited)
1 1 ) <-- when you see '(' at state#1, go to state#1
1 1 ( <-- when you see ')' at state#1, go to state#1

end.

